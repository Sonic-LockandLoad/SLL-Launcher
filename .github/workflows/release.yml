name: Release

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    release:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm install

            - name: Clean previous build
              run: npm run clean

            - name: Compile TypeScript
              run: npm run compile

            - name: Copy source files
              run: npm run copy

            - name: Build Electron app
              run: npm run build

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Linux release assets
              if: matrix.os == 'ubuntu-latest'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: out/linux/appimage_name.AppImage
                  asset_name: linux_appimage.AppImage
                  asset_content_type: application/octet-stream

            - name: Upload macOS release assets
              if: matrix.os == 'macos-latest'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: out/macos/app.dmg
                  asset_name: macos_app.dmg
                  asset_content_type: application/x-disk-image

            - name: Upload Windows release assets
              if: matrix.os == 'windows-latest'
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: out/windows/installer.exe
                  asset_name: windows_installer.exe
                  asset_content_type: application/x-msdownload

